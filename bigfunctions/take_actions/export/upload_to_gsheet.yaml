type: function_py
author: Shivam Singh
description: |
  Upload `data` (a json array of objects) to a Google Sheet
  in `write_mode`.

  > 1. ðŸ’¡ For this to work, share your Google Sheet in edit mode to `749389685934-compute@developer.gserviceaccount.com`
  > 2. `write_mode` controls what is done if a worksheet with `worksheet_name` already exists. It must be one of:
  >     - `write_truncate`: if the sheet already exists, it will be recreated.
  >     - `write_append`: if the sheet already exists, data will be appended to it.
  >     - `raise_error`:  if the sheet already exists, an error will be raised.
  >     - `do_nothing`:  if the sheet already exists, nothing will be done.
  >     - `null`: same as `write_truncate`

arguments:
  - name: data
    type: json
  - name: spreadsheet_url
    type: string
  - name: worksheet_name
    type: string
  - name: write_mode
    type: string
output:
  name: result
  type: string
examples:
  - description: ""
    arguments:
      - "json '[{\"col1\": \"row1\", \"col2\": 1}, {\"col1\": \"row2\", \"col2\": 2}]'"
      - '"https://docs.google.com/spreadsheets/d/xxxxxxxxx"'
      - '"my worksheet"'
      - '"write_truncate"'
    output: 'DATA_UPLOADED'
code: |
  import time
  import google.auth
  import gspread
  import pandas as pd
  import gspread_dataframe
  import gspread.exceptions

  write_mode = write_mode or 'write_truncate'
  accepted_write_modes = ['write_truncate', 'write_append', 'raise_error', 'do_nothing']
  assert write_mode in accepted_write_modes, f'`write_mode` should be one of: {accepted_write_modes}'
  assert spreadsheet_url.startswith('https://docs.google.com/spreadsheets/d/'), 'Invalid `spreadsheet_url`. It must start with `https://docs.google.com/spreadsheets/d/`'

  scopes = ['https://www.googleapis.com/auth/spreadsheets']
  credentials, _ = google.auth.default(scopes=scopes)
  client = gspread.authorize(credentials=credentials)

  seconds_between_retries = 10
  retry_nb = 0
  max_retries = 10

  df = pd.DataFrame(data)

  def upload(retry_nb, seconds_between_retries):
    new_df = df.copy()

    try:
      sheet = client.open_by_url(spreadsheet_url)

      existing_whorksheets = [ws for ws in sheet.worksheets() if ws.title == worksheet_name]
      if existing_whorksheets:
        existing_worksheet = existing_whorksheets[0]

        if write_mode == 'do_nothing':
          return 'NOTHING_DONE_AS_WORKSHEET_EXISTS'

        elif write_mode == 'raise_error':
          assert False, '`write_mode` is `raise_error` and `worksheet_name` already exists in Google Sheet'

        elif write_mode == 'write_truncate':
          existing_worksheet.clear()
          existing_worksheet.resize(max(df.shape[0], 1), max(df.shape[1], 1))

        elif write_mode == 'write_append':
          existing_df = gspread_dataframe.get_as_dataframe(existing_worksheet)
          new_df = pd.concat([existing_df, new_df], ignore_index=True)

      else:
        sheet.add_worksheet(worksheet_name, df.shape[0], df.shape[1], index=0)

      gspread_dataframe.set_with_dataframe(sheet.worksheet(worksheet_name), df)

    except gspread.exceptions.APIError as e:
      error = e.args[0]['message']
      if 'caller does not have permission' in error:
        error += (
          '. Please verify that you shared your Google Sheet in edit mode to ' +
          f'`{get_current_service_account()}`'
        )
      if 'quota exceeded' in error.lower() and retry_nb < max_retries:
        time.sleep(seconds_between_retries)
        seconds_between_retries = seconds_between_retries * 2
        retry_nb += 1
        upload(retry_nb, seconds_between_retries)
      else:
        assert False, "ERROR: " + error

  upload(retry_nb, seconds_between_retries)
  return "DATA_UPLOADED"
requirements: |
  gspread-dataframe
  gspread
  pandas
quotas:
  max_rows_per_query: 1
cloud_run:
  service_account: 749389685934-compute@developer.gserviceaccount.com
