type: function_py
author: Paul Marcombes
description: |
  Request `url`
arguments:
  - name: url
    type: string
  - name: headers
    type: json
    contains_secret: true
output:
  name: response
  type: string
examples:
  - description: "Without headers"
    arguments:
      - "'https://unytics.io/bigfunctions/'"
      - "null"
    output: "&lt;html>...&lt;/html>"
  - description: "With `Content-Type = application/json` headers"
    arguments:
      - "'https://api.github.com/repos/unytics/bigfunctions'"
      - "json_object('Content-Type', 'application/json')"
    output: "{...}"
  - description: "With encrypted bearer token"
    arguments:
      - "'https://api.github.com/repos/unytics/bigfunctions_terraform'"
      - |
        json_object(
          'Content-Type', 'application/json',
          'Authorization', 'Bearer ENCRYPTED_SECRET(ioLZsCtEu5ZKu...)'
        )
    output: "{...}"
code: | #python
  if not url:
    return 'invalid url: it is null or empty'
  if not url.startswith(('http://', 'https://')):
    return 'invalid url: it does not start with http:// nor https://'
  if 'google.internal' in url:
    return 'invalid url: it is a google internal url'
  if headers and not isinstance(headers, dict):
    return 'invalid headers: it is not a json dict'
  if 'metadata-flavor' in [k.lower() for k in (headers or {}).keys()]:
    return 'invalid metadata-flavor header'
  import requests
  return requests.get(url, headers=headers, allow_redirects=False).text
requirements: |
  requests
quotas:
  max_rows_per_query: 100
