type: function_sql
author: Shivam Singh
description: |
  Returns percentile of an array with percentile a float in range [0, 1].

  Algorithm to calculate percentile is based on *[R. J. Hyndman and Y. Fan, "Sample quantiles in statistical packages," The American Statistician, 50(4), pp. 361-365, 1996](https://www.amherst.edu/media/view/129116/original/Sample+Quantiles.pdf)*
arguments:
  - name: arr
    type: any type
  - name: percentile
    type: float64
output:
  name: percentile_value
  type: float64
examples:
  - description: ""
    arguments:
      - "[20, 16, 15, 13, 10, 9, 8, 8, 7, 6, 3]"
      - "0.74"
    output: '13.8'
  - description: ""
    arguments:
      - "[20, 16, 15, 13, 10, 9, 8, 8, 7, 6, 3, 2]"
      - "0.9"
    output: '15.9'
  - description: ""
    arguments:
      - "[20, 16, 15, 13, 10, 9, 8, 8, 7, 6, 3, 2]"
      - "2"
    output: 'null'
code: |
  (
    select
    case
      when (percentile > 1)
        then null
    else
      case
        when (
          ceiling(
            (array_length(array(select a from unnest(arr) as a order by a)) - 1) * percentile
            ) = floor(
              (array_length(array(select a from unnest(arr) as a order by a)) - 1) * percentile
              )
          )
          then
            array(
              select a from unnest(arr) as a order by a
              )[
                safe_offset(cast((array_length(array(select a from unnest(arr) as a order by a)) - 1) * percentile as int64))
                ]
      else
        array(
              select a from unnest(arr) as a order by a
              )[
                safe_offset(cast(floor((array_length(array(select a from unnest(arr) as a order by a)) - 1) * percentile) as int64))
                ]
        +
        (
          (
            array(
              select a from unnest(arr) as a order by a
              )[
                safe_offset(cast(ceiling((array_length(array(select a from unnest(arr) as a order by a)) - 1) * percentile) as int64))
                ]
            -
            array(
              select a from unnest(arr) as a order by a
            )[
              safe_offset(cast(floor((array_length(array(select a from unnest(arr) as a order by a)) - 1) * percentile) as int64))
              ]
          )
          *
          (
            (array_length(array(select a from unnest(arr) as a order by a)) - 1) * percentile - floor((array_length(array(select a from unnest(arr) as a order by a)) - 1) * percentile)
          )
        )
      end
    end
  )
