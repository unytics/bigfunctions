type: procedure
author: Paul Marcombes
description: |
  Ask your data any `question` in natural language.

  > This function calls  [`generate_sql`](generate_sql.md) to convert the `question` into a SQL query adapted to your data and execute it.<br>
  > *(If the execution fails, the temporary table `bigfunction_result` gives details).*

  | Param                   | Description  |
  |-------------------------|--------------|
  | `question`              | A question to ask over your data. It may start with a verb |
  | `fully_qualified_table` | A table whose schema will be given to the generative AI model for context.<br> - `fully_qualified_table` format must be like `PROJECT.DATASET.TABLE`.<br>  - `fully_qualified_table` must exist.<br>  - You must have read permission on the table schema  |
arguments:
  - name: question
    type: string
  - name: fully_qualified_table
    type: string
examples:
  - description: ""
    arguments:
      - "'get the 3 products which generated the most revenue in 2023'"
      - "'{BIGFUNCTIONS_DATASET}.sales'"
    output: |
      +------------+---------+
      | product_id | revenue |
      +------------+---------+
      + 8          + 50286   |
      + 6          + 46172   |
      + 10         + 27972   |
      +------------+---------+
code: |
  call {BIGFUNCTIONS_DATASET}.generate_sql(question, fully_qualified_table);

  begin
    execute immediate
      '''
      create or replace temp table bigfunction_result as
      ''' ||
      (select generated_sql from bigfunction_result);

  exception when error then
    select 'FAILED TO EXECUTE GENERATED QUERY! Get details by running `select * from bigfunction_result`';

    alter table bigfunction_result
    add column execution_error string;

    update bigfunction_result
    set execution_error = @@error.message
    where true;

  end;
