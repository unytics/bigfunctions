type: function_py
author: Paul Marcombes
description: |
  Get `continent_code` of `ip`

  > This functions uses IP address data powered by [IPinfo](https://ipinfo.io)
  > and released under [Creative Commons Attribution-ShareAlike 4.0 International License](https://creativecommons.org/licenses/by-sa/4.0/).
  > You are required to attribute IPinfo to use their free datasets.
  > The attribution requirements can be met by giving their service credit as your data source.
  > Simply place a link to IPinfo on the website, application, or social media account that uses their data.
arguments:
  - name: ip
    type: string
output:
  name: continent_code
  type: string
examples:
  - description: ""
    arguments:
      - "'152.216.7.110'"
    output: 'NA'
init_code: |
  import datetime
  import os
  import shutil
  import urllib.request
  import maxminddb

  today = datetime.datetime.now().strftime('%Y-%m-%d')
  filename = '/storage/country.mmdb'

  update_date = None
  if os.path.isfile(filename):
    updated_at = os.path.getmtime(filename)
    update_date = datetime.datetime.fromtimestamp(updated_at).strftime('%Y-%m-%d')

  if update_date != today:
    url = f'https://ipinfo.io/data/free/country.mmdb?token={ipinfo_token}'
    try:
      urllib.request.urlretrieve(url, filename)
      print('downloaded file from ipinfo')
      assert os.path.isfile(filename)
    except:
      print('error in downloading file from ipinfo')
  else:
    print('using db file from storage')

  db = None
  if os.path.isfile(filename):
    shutil.copy(filename, filename.replace('/storage/', '/tmp/'))
    db = maxminddb.open_database(filename.replace('/storage/', '/tmp/'))
code: |
  assert db, "Could NOT load database"
  try:
    result = db.get(ip)
  except:
    return 'Unknown'
  if not result:
    return 'Unknown'
  return result['continent']
requirements: |
  maxminddb
secrets:
  - name: ipinfo_token
    description: IP Info Token
    documentation_link: https://ipinfo.io/account/token
cloud_run:
  add_volume: '"name=storage,type=cloud-storage,bucket=bigfunctions_storage"'
  add_volume_mount: '"volume=storage,mount-path=/storage"'
  execution-environment: gen2
